spring.application.name=Gateway
server.port=8220

logging.level.ROOT=DEBUG 

#转发功能开始
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[0].id=hello
#uri：目标服务地址
spring.cloud.gateway.routes[0].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[0].predicates[0]=Path=/hello/**
#转发功能开始结束



#通过时间匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[1].id=Before_Route
#uri：目标服务地址
spring.cloud.gateway.routes[1].uri=http://before-route.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[1].predicates[0]=Before=2020-04-17T06:06:06+08:00[Asia/Shanghai]
#转发功能开始结束

#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[2].id=After_Route
#uri：目标服务地址
spring.cloud.gateway.routes[2].uri=http://after-route.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[2].predicates[0]=After=2017-04-17T06:06:06+08:00[Asia/Shanghai]
#转发功能开始结束


#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[3].id=Between_Route
#uri：目标服务地址
spring.cloud.gateway.routes[3].uri=http://between-route.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[3].predicates[0]=Between=2017-04-17T06:06:06+08:00[Asia/Shanghai],2019-09-23T06:06:06+08:00[Asia/Shanghai]
#转发功能开始结束

#通过 Cookie 匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[4].id=Cookie_Route
#uri：目标服务地址
spring.cloud.gateway.routes[4].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[4].predicates[0]=Cookie=name,longzhonghua


#通过 Header 属性匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[5].id=Header_Route
#uri：目标服务地址
spring.cloud.gateway.routes[5].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[5].predicates[0]=Header=X-Request-Id, \d+
#curl http://localhost:8220  -H "X-Request-Id:123"

#通过 Host 匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[6].id=Host_Route
#uri：目标服务地址
spring.cloud.gateway.routes[6].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[6].predicates[0]=Host=**.longzhonghua.com


#通过 Method匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[7].id=Method_Route
#uri：目标服务地址
spring.cloud.gateway.routes[7].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[7].predicates[0]=Method=GET

#通过请求路径匹配
#通过 Path 匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[8].id=Path_Route
#uri：目标服务地址
spring.cloud.gateway.routes[8].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[8].predicates[0]=Path=/hello/{segment}

#通过请求参数匹配
#通过 Query 匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[9].id=Query_Route
#uri：目标服务地址
spring.cloud.gateway.routes[9].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[9].predicates[0]=Query=name
#?name=x&id=1
#Query=name,lon.
#其中.代表一个字符
#?name=long


#通过 ip 匹配
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[10].id=ip_Route
#uri：目标服务地址
spring.cloud.gateway.routes[10].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[10].predicates[0]=RemoteAddr=192.168.1.1/24
#  (子网掩码)

#组合使用Predicates
#id：路由 ID，这里要注意保持唯一
spring.cloud.gateway.routes[11].id=Predicates_Route
#uri：目标服务地址
spring.cloud.gateway.routes[11].uri=http://www.longzhonghua.com
#predicates：路由条件，Predicate根据输入参数，返回一个布尔值（比如：与，或，非）。其包含多种默认方法来将Predicate组合成复杂的路由逻辑
spring.cloud.gateway.routes[11].predicates[1]=Path=/predicates/{segment}
spring.cloud.gateway.routes[11].predicates[0]=Query=name

